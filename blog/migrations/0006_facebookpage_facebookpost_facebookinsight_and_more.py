# Generated by Django 4.2.16 on 2025-09-11 13:16

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0005_upgrade_to_full_ckeditor'),
    ]

    operations = [
        migrations.CreateModel(
            name='FacebookPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_id', models.CharField(help_text='Facebook Page ID', max_length=50, unique=True)),
                ('page_name', models.CharField(help_text='Facebook Page Name', max_length=200)),
                ('access_token', models.TextField(help_text='Facebook Page Access Token')),
                ('app_id', models.CharField(help_text='Facebook App ID', max_length=50)),
                ('app_secret', models.CharField(help_text='Facebook App Secret', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Facebook Page',
                'verbose_name_plural': 'Facebook Pages',
            },
        ),
        migrations.CreateModel(
            name='FacebookPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.CharField(help_text='Facebook Post ID', max_length=100, unique=True)),
                ('message', models.TextField(blank=True, help_text='Post message/text')),
                ('story', models.TextField(blank=True, help_text='Post story')),
                ('post_type', models.CharField(choices=[('status', 'Status Update'), ('photo', 'Photo'), ('video', 'Video'), ('link', 'Link'), ('event', 'Event'), ('offer', 'Offer'), ('note', 'Note')], default='status', max_length=20)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('comments_count', models.PositiveIntegerField(default=0)),
                ('shares_count', models.PositiveIntegerField(default=0)),
                ('reactions_count', models.PositiveIntegerField(default=0)),
                ('reactions_like', models.PositiveIntegerField(default=0)),
                ('reactions_love', models.PositiveIntegerField(default=0)),
                ('reactions_wow', models.PositiveIntegerField(default=0)),
                ('reactions_haha', models.PositiveIntegerField(default=0)),
                ('reactions_sad', models.PositiveIntegerField(default=0)),
                ('reactions_angry', models.PositiveIntegerField(default=0)),
                ('reactions_care', models.PositiveIntegerField(default=0)),
                ('permalink_url', models.URLField(blank=True)),
                ('picture', models.URLField(blank=True, help_text='Post picture URL')),
                ('full_picture', models.URLField(blank=True, help_text='Full size picture URL')),
                ('created_time', models.DateTimeField(help_text='When post was created on Facebook')),
                ('updated_time', models.DateTimeField(blank=True, help_text='When post was last updated on Facebook', null=True)),
                ('first_scraped_at', models.DateTimeField(auto_now_add=True)),
                ('last_scraped_at', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=True)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='blog.facebookpage')),
            ],
            options={
                'verbose_name': 'Facebook Post',
                'verbose_name_plural': 'Facebook Posts',
                'ordering': ['-created_time'],
            },
        ),
        migrations.CreateModel(
            name='FacebookInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_name', models.CharField(choices=[('page_fans', 'Page Fans'), ('page_fan_adds', 'New Page Likes'), ('page_fan_removes', 'Page Unlikes'), ('page_impressions', 'Page Impressions'), ('page_reach', 'Page Reach'), ('page_engaged_users', 'Page Engaged Users'), ('post_impressions', 'Post Impressions'), ('post_reach', 'Post Reach'), ('post_engaged_users', 'Post Engaged Users')], max_length=50)),
                ('period', models.CharField(choices=[('day', 'Daily'), ('week', 'Weekly'), ('days_28', '28 Days'), ('month', 'Monthly'), ('lifetime', 'Lifetime')], max_length=20)),
                ('value', models.PositiveIntegerField(default=0)),
                ('end_time', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insights', to='blog.facebookpage')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='insights', to='blog.facebookpost')),
            ],
            options={
                'verbose_name': 'Facebook Insight',
                'verbose_name_plural': 'Facebook Insights',
                'ordering': ['-end_time'],
            },
        ),
        migrations.CreateModel(
            name='FacebookComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_id', models.CharField(max_length=100, unique=True)),
                ('message', models.TextField()),
                ('from_id', models.CharField(blank=True, help_text='Anonymized user ID', max_length=100)),
                ('from_name', models.CharField(blank=True, help_text='Public display name', max_length=200)),
                ('like_count', models.PositiveIntegerField(default=0)),
                ('comment_count', models.PositiveIntegerField(default=0, help_text='Replies to this comment')),
                ('created_time', models.DateTimeField()),
                ('scraped_at', models.DateTimeField(auto_now_add=True)),
                ('is_hidden', models.BooleanField(default=False)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blog.facebookcomment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fb_comments', to='blog.facebookpost')),
            ],
            options={
                'verbose_name': 'Facebook Comment',
                'verbose_name_plural': 'Facebook Comments',
                'ordering': ['-created_time'],
            },
        ),
        migrations.CreateModel(
            name='FacebookApiLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_type', models.CharField(choices=[('page_posts', 'Page Posts'), ('post_insights', 'Post Insights'), ('page_insights', 'Page Insights'), ('post_comments', 'Post Comments'), ('post_reactions', 'Post Reactions')], max_length=50)),
                ('status', models.CharField(choices=[('success', 'Success'), ('error', 'Error'), ('rate_limited', 'Rate Limited')], max_length=20)),
                ('api_endpoint', models.CharField(max_length=500)),
                ('response_code', models.PositiveIntegerField(blank=True, null=True)),
                ('items_fetched', models.PositiveIntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_logs', to='blog.facebookpage')),
            ],
            options={
                'verbose_name': 'Facebook API Log',
                'verbose_name_plural': 'Facebook API Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='FacebookAnalyticsSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('month', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('page_likes', models.PositiveIntegerField(default=0, help_text='Total page likes')),
                ('page_followers', models.PositiveIntegerField(default=0, help_text='Total page followers')),
                ('page_reach', models.PositiveIntegerField(default=0, help_text='Monthly page reach')),
                ('page_impressions', models.PositiveIntegerField(default=0, help_text='Monthly page impressions')),
                ('posts_count', models.PositiveIntegerField(default=0, help_text='Total posts in month')),
                ('total_likes', models.PositiveIntegerField(default=0)),
                ('total_comments', models.PositiveIntegerField(default=0)),
                ('total_shares', models.PositiveIntegerField(default=0)),
                ('total_reactions', models.PositiveIntegerField(default=0)),
                ('total_engagement', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics_snapshots', to='blog.facebookpage')),
                ('top_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='top_post_snapshots', to='blog.facebookpost')),
            ],
            options={
                'verbose_name': 'Facebook Analytics Snapshot',
                'verbose_name_plural': 'Facebook Analytics Snapshots',
                'ordering': ['-year', '-month'],
            },
        ),
        migrations.AddIndex(
            model_name='facebookpost',
            index=models.Index(fields=['post_id'], name='blog_facebo_post_id_bcd4a3_idx'),
        ),
        migrations.AddIndex(
            model_name='facebookpost',
            index=models.Index(fields=['created_time'], name='blog_facebo_created_c2a847_idx'),
        ),
        migrations.AddIndex(
            model_name='facebookpost',
            index=models.Index(fields=['page', 'created_time'], name='blog_facebo_page_id_8d5d9a_idx'),
        ),
        migrations.AddIndex(
            model_name='facebookinsight',
            index=models.Index(fields=['page', 'metric_name', 'end_time'], name='blog_facebo_page_id_c00028_idx'),
        ),
        migrations.AddIndex(
            model_name='facebookinsight',
            index=models.Index(fields=['post', 'metric_name', 'end_time'], name='blog_facebo_post_id_7e45fe_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='facebookinsight',
            unique_together={('page', 'post', 'metric_name', 'period', 'end_time')},
        ),
        migrations.AddIndex(
            model_name='facebookcomment',
            index=models.Index(fields=['post', 'created_time'], name='blog_facebo_post_id_14bd5f_idx'),
        ),
        migrations.AddIndex(
            model_name='facebookcomment',
            index=models.Index(fields=['comment_id'], name='blog_facebo_comment_76fb2b_idx'),
        ),
        migrations.AddIndex(
            model_name='facebookapilog',
            index=models.Index(fields=['page', 'timestamp'], name='blog_facebo_page_id_cb2232_idx'),
        ),
        migrations.AddIndex(
            model_name='facebookapilog',
            index=models.Index(fields=['log_type', 'timestamp'], name='blog_facebo_log_typ_8cc06b_idx'),
        ),
        migrations.AddIndex(
            model_name='facebookanalyticssnapshot',
            index=models.Index(fields=['page', 'year', 'month'], name='blog_facebo_page_id_5f4e1d_idx'),
        ),
        migrations.AddIndex(
            model_name='facebookanalyticssnapshot',
            index=models.Index(fields=['year', 'month'], name='blog_facebo_year_44585d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='facebookanalyticssnapshot',
            unique_together={('page', 'year', 'month')},
        ),
    ]
